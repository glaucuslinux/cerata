#!/bin/sh

BUNDLENAME=""
c_arg=false
COMMAND=""
CONTENTS=""
DATABASE="/run/s6-rc/compiled"
HELP_MSG="s6-rc-bundle-update: usage: s6-rc-bundle-update [ -c compiled ] command... (use s6-rc-bundle-update help for more information)"
for arg in "$@"; do
	if [ "$c_arg" = true ]; then
		DATABASE=$arg
		c_arg=false
		continue
	fi
	if [ "$arg" = "-c" ]; then
		c_arg=true
		continue
	fi
	if [ "$COMMAND" = "" ]; then
		COMMAND=$arg
		continue
	fi
	if [ "$BUNDLENAME" = "" ]; then
		BUNDLENAME=$arg
		continue
	fi
	CONTENTS="${CONTENTS} $arg"
done

case $COMMAND in
    help)
	echo "s6-rc-bundle-update help"
	echo "s6-rc-bundle-update add bundlename contents..."
	echo "s6-rc-bundle-update delete bundlename contents..."
	echo "s6-rc-bundle-update list bundlename";;

    add)
	if [ "$#" -lt 3 ]; then
		echo "$HELP_MSG"
		exit 1
	fi
	isbundle=$(s6-rc-db -c $DATABASE type "$BUNDLENAME" 2> /dev/null)
	if [ "$?" = 111 ]; then
		echo "s6-rc-bundle-update: fatal: unable to take lock on $DATABASE: Permission denied"
		exit 1
	fi
	if [ "$isbundle" != "bundle" ]; then
		echo "$BUNDLENAME is not an existing bundle. Create it with s6-rc-bundle."
		exit 1
	fi

	old=$(s6-rc-db -c $DATABASE contents $BUNDLENAME)
	s6-rc-bundle -c $DATABASE delete $BUNDLENAME
	ret=$(s6-rc-bundle -c $DATABASE add $BUNDLENAME $old $CONTENTS)
	if [ "$?" != 0 ]; then
		echo "Error when trying to add $CONTENTS!"
		s6-rc-bundle -c $DATABASE add $BUNDLENAME $old
	fi;;
    
    delete)
	if [ "$#" -lt 3 ]; then
		echo "$HELP_MSG"
		exit 1
	fi
	isbundle=$(s6-rc-db -c $DATABASE type "$BUNDLENAME" 2> /dev/null)
	if [ "$?" = 111 ]; then
		echo "s6-rc-bundle-update: fatal: unable to take lock on $DATABASE: Permission denied"
		exit 1
	fi
	if [ "$isbundle" != "bundle" ]; then
		echo "$BUNDLENAME is not an existing bundle. Create it with s6-rc-bundle"
		exit 1
	fi
	old=$(s6-rc-db -c $DATABASE contents $BUNDLENAME)
	for entry in $CONTENTS; do
		isbundle=$(s6-rc-db -c $DATABASE type "$entry" 2> /dev/null)
		if [ "$isbundle" = "bundle" ]; then
			entrycontents=$(s6-rc-db -c $DATABASE contents $entry)
		else
			entrycontents=$entry
		fi
		for srv in $entrycontents; do
			ret=$(echo $old | grep -w $srv)
			if [ "$?" != 0 ]; then
				echo "$entry does not exist in bundle $BUNDLENAME!"
				exit 1
			else
				oldupdated=""
				for oldsrv in $old; do
					if [ "$oldsrv" != "$srv" ]; then
						oldupdated="${oldupdated} $oldsrv"
					fi
				done
				old=$oldupdated
			fi
		done
	done
	s6-rc-bundle -c $DATABASE delete $BUNDLENAME
	s6-rc-bundle -c $DATABASE add $BUNDLENAME $old;;
    
    list)
	if [ "$#" -lt 2 ]; then
		echo "$HELP_MSG"
		exit 1
	fi
	isbundle=$(s6-rc-db -c $DATABASE type "$BUNDLENAME" 2> /dev/null)
	if [ "$?" = 111 ]; then
		echo "s6-rc-bundle-update: fatal: unable to take lock on $DATABASE: Permission denied"
		exit 1
	fi
	if [ "$isbundle" != "bundle" ]; then
		echo "$BUNDLENAME is not an existing bundle. Create it with s6-rc-bundle"
		exit 1
	fi
	echo "$(s6-rc-db -c $DATABASE contents $BUNDLENAME)";;

    *)
	echo "$HELP_MSG";;
esac
