--- lib/getgr_nam_gid.c
+++ lib/getgr_nam_gid.c
@@ -36,8 +36,8 @@
 	    && ('\0' == *end)
 	    && (0 == errno)
 	    && (/*@+longintegral@*/gid == (gid_t)gid)/*@=longintegral@*/) {
-		return xgetgrgid (gid);
+		return getgrgid (gid);
 	}
-	return xgetgrnam (grname);
+	return getgrnam (grname);
 }
 
--- lib/myname.c
+++ lib/myname.c
@@ -35,7 +35,7 @@
 	 * the original user, like getlogin() does).  Does this matter?
 	 */
 	if ((NULL != cp) && ('\0' != *cp)) {
-		pw = xgetpwnam (cp);
+		pw = getpwnam (cp);
 		if ((NULL != pw) && (pw->pw_uid == ruid)) {
 			return pw;
 		}
@@ -44,6 +44,6 @@
 		}
 	}
 
-	return xgetpwuid (ruid);
+	return getpwuid (ruid);
 }
 
--- src/chfn.c
+++ src/chfn.c
@@ -649,7 +649,7 @@
 	 */
 	if (optind < argc) {
 		user = argv[optind];
-		pw = xgetpwnam (user);
+		pw = getpwnam (user);
 		if (NULL == pw) {
 			fprintf (stderr, _("%s: user '%s' does not exist\n"), Prog,
 			         user);
--- src/chsh.c
+++ src/chsh.c
@@ -499,7 +499,7 @@
 	 */
 	if (optind < argc) {
 		user = argv[optind];
-		pw = xgetpwnam (user);
+		pw = getpwnam (user);
 		if (NULL == pw) {
 			fprintf (stderr,
 			         _("%s: user '%s' does not exist\n"), Prog, user);
--- src/login.c
+++ src/login.c
@@ -780,7 +780,7 @@
 	username = xstrdup (pam_user);
 	failent_user = get_failent_user (username);
 
-	pwd = xgetpwnam (username);
+	pwd = getpwnam (username);
 	if (NULL == pwd) {
 		SYSLOG ((LOG_ERR, "cannot find user %s", failent_user));
 		fprintf (stderr,
@@ -847,7 +847,7 @@
 		/* Get the username to be used to log failures */
 		failent_user = get_failent_user (username);
 
-		pwd = xgetpwnam (username);
+		pwd = getpwnam (username);
 		if (NULL == pwd) {
 			preauth_flag = false;
 			failed = true;
@@ -880,7 +880,7 @@
 		}
 
 		if (strcmp (user_passwd, SHADOW_PASSWD_STRING) == 0) {
-			spwd = xgetspnam (username);
+			spwd = getspnam (username);
 			if (NULL != spwd) {
 				user_passwd = spwd->sp_pwdp;
 			} else {
@@ -1070,7 +1070,7 @@
 			 * getxxyyy in between.
 			 */
 			pw_free (pwd);
-			pwd = xgetpwnam (username);
+			pwd = getpwnam (username);
 			if (NULL == pwd) {
 				SYSLOG ((LOG_ERR,
 				         "cannot find user %s after update of expired password",
@@ -1078,7 +1078,7 @@
 				exit (1);
 			}
 			spw_free (spwd);
-			spwd = xgetspnam (username);
+			spwd = getspnam (username);
 		}
 	}
 	setup_limits (pwd);	/* nice, ulimit etc. */
--- src/newgrp.c
+++ src/newgrp.c
@@ -141,7 +141,7 @@
 	 * password, and the group has a password, she needs to give the
 	 * group password.
 	 */
-	spwd = xgetspnam (pwd->pw_name);
+	spwd = getspnam (pwd->pw_name);
 	if (NULL != spwd) {
 		pwd->pw_passwd = xstrdup (spwd->sp_pwdp);
 		spw_free (spwd);
@@ -522,7 +522,7 @@
 			 * Perhaps in the past, but the default behavior now depends on the
 			 * group entry, so it had better exist.  -- JWP
 			 */
-			grp = xgetgrgid (pwd->pw_gid);
+			grp = getgrgid (pwd->pw_gid);
 			if (NULL == grp) {
 				fprintf (stderr,
 				         _("%s: GID '%lu' does not exist\n"),
@@ -644,7 +644,7 @@
 			 *
 			 * Re-read the group entry for further processing.
 			 */
-			grp = xgetgrnam (group);
+			grp = getgrnam (group);
 			assert (NULL != grp);
 		}
 	}
