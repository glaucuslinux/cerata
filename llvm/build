# Copyright (c) 2018-2025, Firas Khalil Khana
# Distributed under the terms of the ISC License

# Voyager: Firas Khalil Khana (firasuke) <firasuke@glaucuslinux.org>

prepare() {
  cd "$TMPD"/$nom/$nom-project-$ver.src

  mkdir -p build
}

configure() {
  glaucus-cmake \
    -B build \
    -DBENCHMARK_INSTALL_DOCS=OFF \
    -DBUILD_SHARED_LIBS=ON \
    -DCLANG_CONFIG_FILE_SYSTEM_DIR=/etc/clang \
    -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
    -DCLANG_DEFAULT_LINKER=mold \
    -DCLANG_DEFAULT_OBJCOPY=llvm-objcopy \
    -DCLANG_DEFAULT_PIE_ON_LINUX=ON \
    -DCLANG_DEFAULT_RTLIB=compiler-rt \
    -DCLANG_DEFAULT_UNWINDLIB=libunwind \
    -DCLANG_ENABLE_BOOTSTRAP=OFF \
    -DCLANG_LINK_CLANG_DYLIB=ON \
    -DCLANG_PLUGIN_SUPPORT=ON \
    -DCLANG_REPOSITORY_STRING=glaucus \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_C_COMPILER=clang \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DCOMPILER_RT_BUILD_BUILTINS=ON \
    -DCOMPILER_RT_BUILD_SANITIZERS=OFF \
    -DCOMPILER_RT_BUILD_XRAY=OFF \
    -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
    -DCOMPILER_RT_USE_LIBCXX=ON \
    -DCPACK_BINARY_STGZ=OFF \
    -DCPACK_BINARY_TGZ=OFF \
    -DCPACK_BINARY_TZ=OFF \
    -DCPACK_SOURCE_TBZ2=OFF \
    -DCPACK_SOURCE_TXZ=OFF \
    -DENABLE_LINKER_BUILD_ID=ON \
    -DLIBCXXABI_ENABLE_SHARED=ON \
    -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
    -DLIBCXXABI_USE_COMPILER_RT=ON \
    -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
    -DLIBCXX_CXX_ABI=libcxxabi \
    -DLIBCXX_ENABLE_ASSERTIONS=OFF \
    -DLIBCXX_ENABLE_SHARED=ON \
    -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
    -DLIBCXX_HARDENING_MODE=fast \
    -DLIBCXX_HAS_ATOMIC_LIB=ON \
    -DLIBCXX_HAS_MUSL_LIBC=ON \
    -DLIBCXX_USE_COMPILER_RT=ON \
    -DLIBOMP_USE_HWLOC=ON \
    -DLIBUNWIND_ENABLE_ASSERTIONS=OFF \
    -DLIBUNWIND_ENABLE_SHARED=ON \
    -DLIBUNWIND_INSTALL_HEADERS=ON \
    -DLIBUNWIND_INSTALL_LIBRARY=ON \
    -DLIBUNWIND_USE_COMPILER_RT=ON \
    -DLLVM_APPEND_VC_REV=OFF \
    -DLLVM_BINUTILS_INCDIR=/usr/include \
    -DLLVM_BUILD_DOCS=OFF \
    -DLLVM_BUILD_EXAMPLES=OFF \
    -DLLVM_BUILD_LLVM_DYLIB=ON \
    -DLLVM_BUILD_TESTS=OFF \
    -DLLVM_BUILD_TOOLS=ON \
    -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-pc-linux-musl \
    -DLLVM_DYLIB_COMPONENTS=all \
    -DLLVM_ENABLE_ASSERTIONS=OFF \
    -DLLVM_ENABLE_BINDINGS=OFF \
    -DLLVM_ENABLE_CURL=ON \
    -DLLVM_ENABLE_DUMP=ON \
    -DLLVM_ENABLE_EH=ON \
    -DLLVM_ENABLE_FFI=ON \
    -DLLVM_ENABLE_LIBCXX=ON \
    -DLLVM_ENABLE_LIBEDIT=ON \
    -DLLVM_ENABLE_LIBXML2=ON \
    -DLLVM_ENABLE_OCAMLDOC=OFF \
    -DLLVM_ENABLE_PIC=ON \
    -DLLVM_ENABLE_PLUGINS=ON \
    -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld" \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi;libunwind" \
    -DLLVM_ENABLE_ZLIB=ON \
    -DLLVM_ENABLE_ZSTD=ON \
    -DLLVM_HOST_TRIPLE=x86_64-pc-linux-musl \
    -DLLVM_INCLUDE_BENCHMARKS=OFF \
    -DLLVM_INCLUDE_DOCS=OFF \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
    -DLLVM_INSTALL_UTILS=ON \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DLLVM_PARALLEL_LINK_JOBS=1 \
    -DLLVM_TARGET_ARCH=x86_64 \
    -DLLVM_TARGETS_TO_BUILD="host;AMDGPU" \
    -DLLVM_TARGETS_TO_BUILD=X86 \
    -DLLVM_USE_PERF=ON \
    -DLLVM_USE_SANITIZER=OFF \
    -DSPHINX_WARNINGS_AS_ERRORS=OFF \
    -S $nom \
    -W no-dev
}

build() {
  samu \
    -C build
}

package() {
  DESTDIR="$SACD" \
  samu \
    -C build \
    install/strip
}
